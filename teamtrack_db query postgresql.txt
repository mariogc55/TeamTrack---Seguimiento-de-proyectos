-- --------------------------------------------------------
-- 1. CREACIÓN DEL TIPO ENUM PARA LOS ROLES
-- Este tipo de dato garantiza que solo se puedan asignar los valores 'admin' o 'miembro'.
-- --------------------------------------------------------
DO $$ BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'rol_usuario') THEN
        CREATE TYPE rol_usuario AS ENUM ('admin', 'miembro');
    END IF;
END $$;


-- --------------------------------------------------------
-- 2. TABLA: Usuarios
-- Almacena la información de los usuarios y sus roles de acceso.
-- --------------------------------------------------------
CREATE TABLE IF NOT EXISTS "Usuarios" (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL, -- El email debe ser único para el login
    contraseña VARCHAR(255) NOT NULL, -- Almacenar el hash de la contraseña (bcrypt, etc.)
    rol rol_usuario NOT NULL DEFAULT 'miembro', -- Usa el tipo ENUM
    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


-- --------------------------------------------------------
-- 3. TABLA: Proyectos
-- Almacena los proyectos de la organización.
-- --------------------------------------------------------
CREATE TABLE IF NOT EXISTS "Proyectos" (
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(150) NOT NULL,
    descripcion TEXT,
    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    -- Clave Foránea: El líder del proyecto debe ser un usuario existente
    id_lider INTEGER REFERENCES "Usuarios"(id) ON DELETE SET NULL
);


-- --------------------------------------------------------
-- 4. TABLA: Tareas
-- Almacena las tareas individuales asociadas a un proyecto, con progreso y fechas límite.
-- --------------------------------------------------------
CREATE TABLE IF NOT EXISTS "Tareas" (
    id SERIAL PRIMARY KEY,
    -- Clave Foránea: La tarea pertenece a un proyecto
    id_proyecto INTEGER NOT NULL REFERENCES "Proyectos"(id) ON DELETE CASCADE,
    
    titulo VARCHAR(150) NOT NULL,
    descripcion TEXT,
    
    -- Funcionalidades Requeridas:
    fecha_limite DATE,
    porcentaje_progreso INTEGER NOT NULL DEFAULT 0 CHECK (porcentaje_progreso BETWEEN 0 AND 100),
    estado VARCHAR(50) NOT NULL DEFAULT 'Pendiente', -- Ej: Pendiente, En Progreso, Completa
    
    -- Clave Foránea: La tarea está asignada a un usuario
    id_asignado_a INTEGER REFERENCES "Usuarios"(id) ON DELETE SET NULL,

    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


-- --------------------------------------------------------
-- EJEMPLOS DE INSERCIÓN (Opcional, para pruebas)
-- ¡COMENTAR ESTAS LÍNEAS DESPUÉS DE LA PRIMERA EJECUCIÓN EXITOSA!
-- --------------------------------------------------------

-- Ya existe la llave (email)=(admin@teamtrack.com), la siguiente línea fallará
-- INSERT INTO "Usuarios" (nombre, email, contraseña, rol) VALUES 
-- ('Administrador Principal', 'admin@teamtrack.com', 'hash_admin_password', 'admin'),
-- ('Miembro del Equipo', 'miembro@teamtrack.com', 'hash_miembro_password', 'miembro');

-- Ya existe el proyecto 1, la siguiente línea fallará
-- INSERT INTO "Proyectos" (nombre, descripcion, id_lider) VALUES
-- ('Implementación TeamTrack', 'Desarrollo e integración completa de la aplicación.', 1);

-- Ya existen estas tareas, comentar también
-- INSERT INTO "Tareas" (id_proyecto, titulo, descripcion, fecha_limite, porcentaje_progreso, id_asignado_a) VALUES
-- (1, 'Diseño del Frontend Vue 3', 'Definir componentes y rutas.', '2025-10-15', 50, 2),
-- (1, 'Configuración del Backend Express', 'Crear la estructura de carpetas y conectar la DB.', '2025-10-10', 100, 1),
-- (1, 'Generación de Reportes PDF', 'Investigar e integrar la librería pdfkit.', '2025-10-25', 0, 2);